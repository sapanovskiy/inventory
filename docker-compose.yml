version: "3.9"

services:
#  inventory_app:
#    container_name: inventory_app
#    image: postgres
#    environment:
#      POSTGRES_USER: "inventory_app"
#      POSTGRES_PASSWORD: "inventory123"
#      PGDATA: /data/inventory_app
#    volumes:
#      - inventory_app:/data/inventory_app
#    ports:
#      - "5432:5432"
  db:
    container_name: db
    image: postgres:12-alpine
#    environment:
#      POSTGRES_HOST_AUTH_METHOD: trust
#      POSTGRES_USER: "inventory_app"
#      POSTGRES_PASSWORD: "inventory123"
#      POSTGRES_DB: "inventory_app"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
#    ports:
#      - "5432:5432"

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    stdin_open: true
    volumes:
      - ./frontend:/app
      # One-way volume to use node_modules from inside image
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: npm start
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python /usr/src/back/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "inventory123"
      POSTGRES_DB: "inventory_app"
    depends_on:
      - db
      #- inventory_app

volumes:
  postgres_data:
  #inventory_app:

